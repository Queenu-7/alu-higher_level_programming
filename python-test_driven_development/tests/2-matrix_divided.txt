#!/usr/bin/python3

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test normal case with integers:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test that original matrix is not modified:
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Test with floats:
    >>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
    >>> matrix_divided(matrix, 2)
    [[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

Test with mixed integers and floats:
    >>> matrix = [[1, 2.5, 3], [4.0, 5, 6.5]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.25, 1.5], [2.0, 2.5, 3.25]]

Test with negative numbers:
    >>> matrix = [[-1, -2, -3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[-0.5, -1.0, -1.5], [2.0, 2.5, 3.0]]

Test with single element matrix:
    >>> matrix = [[5]]
    >>> matrix_divided(matrix, 2)
    [[2.5]]

Test with single row:
    >>> matrix = [[1, 2, 3]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0]]

Test division by float:
    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 2.5)
    [[0.4, 0.8], [1.2, 1.6]]

Test division by negative number:
    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, -2)
    [[-0.5, -1.0], [-1.5, -2.0]]

Test zero in matrix:
    >>> matrix = [[0, 2], [3, 4]]
    >>> matrix_divided(matrix, 2)
    [[0.0, 1.0], [1.5, 2.0]]

Test with large numbers requiring rounding:
    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67], [1.0, 1.33]]

Test TypeError for non-list matrix:
    >>> matrix_divided("not a list", 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test TypeError for empty matrix:
    >>> matrix_divided([], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test TypeError for matrix with non-list elements:
    >>> matrix_divided([1, 2, 3], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test TypeError for matrix with empty lists:
    >>> matrix_divided([[], []], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test TypeError for rows of different sizes:
    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Test TypeError for matrix with non-numeric elements:
    >>> matrix = [[1, 2, "3"], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test TypeError for matrix with None elements:
    >>> matrix = [[1, 2, None], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test TypeError for non-numeric divisor:
    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, "2")
    Traceback (most recent call last):
    TypeError: div must be a number

Test TypeError for None divisor:
    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    TypeError: div must be a number

Test ZeroDivisionError for division by zero:
    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Test ZeroDivisionError for division by 0.0:
    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 0.0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Test missing arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test missing div argument:
    >>> matrix_divided([[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test with infinity:
    >>> matrix = [[1, 2], [3, 4]]
    >>> result = matrix_divided(matrix, float('inf'))
    >>> result
    [[0.0, 0.0], [0.0, 0.0]]
